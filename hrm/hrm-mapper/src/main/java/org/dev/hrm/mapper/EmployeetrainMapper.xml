<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dev.hrm.mapper.EmployeetrainMapper">
  <resultMap id="BaseResultMap" type="org.dev.hrm.model.Employeetrain">
    <!--@mbg.generated-->
    <!--@Table employeetrain-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="eid" jdbcType="INTEGER" property="eid" />
    <result column="trainDate" jdbcType="DATE" property="traindate" />
    <result column="trainContent" jdbcType="VARCHAR" property="traincontent" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, eid, trainDate, trainContent, remark
  </sql>
  <select id="selectByExample" parameterType="org.dev.hrm.model.EmployeetrainExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employeetrain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from employeetrain
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from employeetrain
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.dev.hrm.model.EmployeetrainExample">
    <!--@mbg.generated-->
    delete from employeetrain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.dev.hrm.model.Employeetrain" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into employeetrain (eid, trainDate, trainContent, 
      remark)
    values (#{eid,jdbcType=INTEGER}, #{traindate,jdbcType=DATE}, #{traincontent,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.dev.hrm.model.Employeetrain" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into employeetrain
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        eid,
      </if>
      <if test="traindate != null">
        trainDate,
      </if>
      <if test="traincontent != null">
        trainContent,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="traindate != null">
        #{traindate,jdbcType=DATE},
      </if>
      <if test="traincontent != null">
        #{traincontent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.dev.hrm.model.EmployeetrainExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from employeetrain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update employeetrain
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eid != null">
        eid = #{record.eid,jdbcType=INTEGER},
      </if>
      <if test="record.traindate != null">
        trainDate = #{record.traindate,jdbcType=DATE},
      </if>
      <if test="record.traincontent != null">
        trainContent = #{record.traincontent,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update employeetrain
    set id = #{record.id,jdbcType=INTEGER},
      eid = #{record.eid,jdbcType=INTEGER},
      trainDate = #{record.traindate,jdbcType=DATE},
      trainContent = #{record.traincontent,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.dev.hrm.model.Employeetrain">
    <!--@mbg.generated-->
    update employeetrain
    <set>
      <if test="eid != null">
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="traindate != null">
        trainDate = #{traindate,jdbcType=DATE},
      </if>
      <if test="traincontent != null">
        trainContent = #{traincontent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.dev.hrm.model.Employeetrain">
    <!--@mbg.generated-->
    update employeetrain
    set eid = #{eid,jdbcType=INTEGER},
      trainDate = #{traindate,jdbcType=DATE},
      trainContent = #{traincontent,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>