<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dev.hrm.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="org.dev.hrm.model.Employee">
    <!--@mbg.generated-->
    <!--@Table employee-->
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="gender" jdbcType="CHAR" property="gender"/>
    <result column="birthday" jdbcType="DATE" property="birthday"/>
    <result column="idCard" jdbcType="CHAR" property="idCard"/>
    <result column="wedlock" jdbcType="OTHER" property="wedlock"/>
    <result column="nationId" jdbcType="INTEGER" property="nationId"/>
    <result column="nativePlace" jdbcType="VARCHAR" property="nativePlace"/>
    <result column="politicId" jdbcType="INTEGER" property="politicId"/>
    <result column="email" jdbcType="VARCHAR" property="email"/>
    <result column="phone" jdbcType="VARCHAR" property="phone"/>
    <result column="address" jdbcType="VARCHAR" property="address"/>
    <result column="departmentId" jdbcType="INTEGER" property="departmentId"/>
    <result column="jobLevelId" jdbcType="INTEGER" property="jobLevelId"/>
    <result column="posId" jdbcType="INTEGER" property="posId"/>
    <result column="engageForm" jdbcType="VARCHAR" property="engageForm"/>
    <result column="tiptopDegree" jdbcType="OTHER" property="tiptopDegree"/>
    <result column="specialty" jdbcType="VARCHAR" property="specialty"/>
    <result column="school" jdbcType="VARCHAR" property="school"/>
    <result column="beginDate" jdbcType="DATE" property="beginDate"/>
    <result column="workState" jdbcType="OTHER" property="workState"/>
    <result column="workID" jdbcType="CHAR" property="workID"/>
    <result column="contractTerm" jdbcType="DOUBLE" property="contractTerm"/>
    <result column="conversionTime" jdbcType="DATE" property="conversionTime"/>
    <result column="notWorkDate" jdbcType="DATE" property="notworkDate"/>
    <result column="beginContract" jdbcType="DATE" property="beginContract"/>
    <result column="endContract" jdbcType="DATE" property="endContract"/>
    <result column="workAge" jdbcType="INTEGER" property="workAge"/>
  </resultMap>
  <resultMap id="AllEmployeeInfo" type="org.dev.hrm.model.Employee" extends="BaseResultMap">
    <association property="nation" javaType="org.dev.hrm.model.Nation">
      <id column="nid" property="id"/>
      <result column="nname" property="name"/>
    </association>
    <association property="politicsstatus" javaType="org.dev.hrm.model.PoliticsStatus">
      <id column="pid" property="id"/>
      <result column="pname" property="name"/>
    </association>
    <association property="department" javaType="org.dev.hrm.model.Department">
      <id column="did" property="id"/>
      <result column="dname" property="name"/>
    </association>
    <association property="jobLevel" javaType="org.dev.hrm.model.JobLevel">
      <id column="jid" property="id"/>
      <result column="jname" property="name"/>
    </association>
    <association property="position" javaType="org.dev.hrm.model.Position">
      <id column="posId" property="id"/>
      <result column="posname" property="name"/>
    </association>
  </resultMap>

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId,
    email, phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree,
    specialty, school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate,
    beginContract, endContract, workAge
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List"/>
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.dev.hrm.model.Employee"
    useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into employee (`name`, gender, birthday,
    idCard, wedlock, nationId,
    nativePlace, politicId, email,
    phone, address, departmentId,
    jobLevelId, posId, engageForm,
    tiptopDegree, specialty, school,
    beginDate, workState, workID,
    contractTerm, conversionTime, notWorkDate,
    beginContract, endContract, workAge
    )
    values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{birthday,jdbcType=DATE},
    #{idCard,jdbcType=CHAR}, #{wedlock,jdbcType=OTHER}, #{nationId,jdbcType=INTEGER},
    #{nativePlace,jdbcType=VARCHAR}, #{politicId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
    #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER},
    #{jobLevelId,jdbcType=INTEGER}, #{posId,jdbcType=INTEGER}, #{engageForm,jdbcType=VARCHAR},
    #{tiptopDegree,jdbcType=OTHER}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR},
    #{beginDate,jdbcType=DATE}, #{workState,jdbcType=OTHER}, #{workID,jdbcType=CHAR},
    #{contractTerm,jdbcType=DOUBLE}, #{conversionTime,jdbcType=DATE}, #{notworkDate,jdbcType=DATE},
    #{beginContract,jdbcType=DATE}, #{endContract,jdbcType=DATE}, #{workAge,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id"
    parameterType="org.dev.hrm.model.Employee" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="idCard != null">
        idCard,
      </if>
      <if test="wedlock != null">
        wedlock,
      </if>
      <if test="nationId != null">
        nationId,
      </if>
      <if test="nativePlace != null">
        nativePlace,
      </if>
      <if test="politicId != null">
        politicId,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="departmentId != null">
        departmentId,
      </if>
      <if test="jobLevelId != null">
        jobLevelId,
      </if>
      <if test="posId != null">
        posId,
      </if>
      <if test="engageForm != null">
        engageForm,
      </if>
      <if test="tiptopDegree != null">
        tiptopDegree,
      </if>
      <if test="specialty != null">
        specialty,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="beginDate != null">
        beginDate,
      </if>
      <if test="workState != null">
        workState,
      </if>
      <if test="workID != null">
        workID,
      </if>
      <if test="contractTerm != null">
        contractTerm,
      </if>
      <if test="conversionTime != null">
        conversionTime,
      </if>
      <if test="notworkDate != null">
        notWorkDate,
      </if>
      <if test="beginContract != null">
        beginContract,
      </if>
      <if test="endContract != null">
        endContract,
      </if>
      <if test="workAge != null">
        workAge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null">
        #{wedlock,jdbcType=OTHER},
      </if>
      <if test="nationId != null">
        #{nationId,jdbcType=INTEGER},
      </if>
      <if test="nativePlace != null">
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="politicId != null">
        #{politicId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="jobLevelId != null">
        #{jobLevelId,jdbcType=INTEGER},
      </if>
      <if test="posId != null">
        #{posId,jdbcType=INTEGER},
      </if>
      <if test="engageForm != null">
        #{engageForm,jdbcType=VARCHAR},
      </if>
      <if test="tiptopDegree != null">
        #{tiptopDegree,jdbcType=OTHER},
      </if>
      <if test="specialty != null">
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null">
        #{beginDate,jdbcType=DATE},
      </if>
      <if test="workState != null">
        #{workState,jdbcType=OTHER},
      </if>
      <if test="workID != null">
        #{workID,jdbcType=CHAR},
      </if>
      <if test="contractTerm != null">
        #{contractTerm,jdbcType=DOUBLE},
      </if>
      <if test="conversionTime != null">
        #{conversionTime,jdbcType=DATE},
      </if>
      <if test="notworkDate != null">
        #{notworkDate,jdbcType=DATE},
      </if>
      <if test="beginContract != null">
        #{beginContract,jdbcType=DATE},
      </if>
      <if test="endContract != null">
        #{endContract,jdbcType=DATE},
      </if>
      <if test="workAge != null">
        #{workAge,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.dev.hrm.model.Employee">
    <!--@mbg.generated-->
    update employee
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="idCard != null">
        idCard = #{idCard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null">
        wedlock = #{wedlock,jdbcType=OTHER},
      </if>
      <if test="nationId != null">
        nationId = #{nationId,jdbcType=INTEGER},
      </if>
      <if test="nativePlace != null">
        nativePlace = #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="politicId != null">
        politicId = #{politicId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        departmentId = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="jobLevelId != null">
        jobLevelId = #{jobLevelId,jdbcType=INTEGER},
      </if>
      <if test="posId != null">
        posId = #{posId,jdbcType=INTEGER},
      </if>
      <if test="engageForm != null">
        engageForm = #{engageForm,jdbcType=VARCHAR},
      </if>
      <if test="tiptopDegree != null">
        tiptopDegree = #{tiptopDegree,jdbcType=OTHER},
      </if>
      <if test="specialty != null">
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null">
        beginDate = #{beginDate,jdbcType=DATE},
      </if>
      <if test="workState != null">
        workState = #{workState,jdbcType=OTHER},
      </if>
      <if test="workID != null">
        workID = #{workID,jdbcType=CHAR},
      </if>
      <if test="contractTerm != null">
        contractTerm = #{contractTerm,jdbcType=DOUBLE},
      </if>
      <if test="conversionTime != null">
        conversionTime = #{conversionTime,jdbcType=DATE},
      </if>
      <if test="notworkDate != null">
        notWorkDate = #{notworkDate,jdbcType=DATE},
      </if>
      <if test="beginContract != null">
        beginContract = #{beginContract,jdbcType=DATE},
      </if>
      <if test="endContract != null">
        endContract = #{endContract,jdbcType=DATE},
      </if>
      <if test="workAge != null">
        workAge = #{workAge,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.dev.hrm.model.Employee">
    <!--@mbg.generated-->
    update employee
    set `name` = #{name,jdbcType=VARCHAR},
    gender = #{gender,jdbcType=CHAR},
    birthday = #{birthday,jdbcType=DATE},
    idCard = #{idCard,jdbcType=CHAR},
    wedlock = #{wedlock,jdbcType=OTHER},
    nationId = #{nationId,jdbcType=INTEGER},
    nativePlace = #{nativePlace,jdbcType=VARCHAR},
    politicId = #{politicId,jdbcType=INTEGER},
    email = #{email,jdbcType=VARCHAR},
    phone = #{phone,jdbcType=VARCHAR},
    address = #{address,jdbcType=VARCHAR},
    departmentId = #{departmentId,jdbcType=INTEGER},
    jobLevelId = #{jobLevelId,jdbcType=INTEGER},
    posId = #{posId,jdbcType=INTEGER},
    engageForm = #{engageForm,jdbcType=VARCHAR},
    tiptopDegree = #{tiptopDegree,jdbcType=OTHER},
    specialty = #{specialty,jdbcType=VARCHAR},
    school = #{school,jdbcType=VARCHAR},
    beginDate = #{beginDate,jdbcType=DATE},
    workState = #{workState,jdbcType=OTHER},
    workID = #{workID,jdbcType=CHAR},
    contractTerm = #{contractTerm,jdbcType=DOUBLE},
    conversionTime = #{conversionTime,jdbcType=DATE},
    notWorkDate = #{notworkDate,jdbcType=DATE},
    beginContract = #{beginContract,jdbcType=DATE},
    endContract = #{endContract,jdbcType=DATE},
    workAge = #{workAge,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="getEmployeeByPage" resultMap="AllEmployeeInfo">
    select e.*,p.`id` as pid,p.`name` as pname,n.`id` as nid,n.`name` as nname,d.`id` as
    did,d.`name` as
    dname,j.`id` as jid,j.`name` as jname,pos.`id` as posId,pos.`name` as posname from employee
    e,nation
    n,politicsstatus p,department d,joblevel j,position pos where e.`nationId`=n.`id` and
    e.`politicId`=p.`id` and
    e.`departmentId`=d.`id` and e.`jobLevelId`=j.`id` and e.`posId`=pos.`id`
    <if test="emp.name !=null and emp.name!=''">
      and e.name like concat('%',#{emp.name},'%')
    </if>
    <if test="emp.politicId !=null">
      and e.politicId =#{emp.politicId}
    </if>
    <if test="emp.nationId !=null">
      and e.nationId =#{emp.nationId}
    </if>
    <if test="emp.departmentId !=null">
      and e.departmentId =#{emp.departmentId}
    </if>
    <if test="emp.jobLevelId !=null">
      and e.jobLevelId =#{emp.jobLevelId}
    </if>
    <if test="emp.engageForm !=null and emp.engageForm!=''">
      and e.engageForm =#{emp.engageForm}
    </if>
    <if test="emp.workState !=null and emp.workState!=''">
      and e.workState =#{emp.workState}
    </if>
    <if test="emp.posId !=null">
      and e.posId =#{emp.posId}
    </if>
    <if test="beginDateScope !=null">
      and e.beginDate between #{beginDateScope[0]} and #{beginDateScope[1]}
    </if>
    <if test="page !=null and size!=null">
      limit #{page},#{size}
    </if>
  </select>
  <delete id="deleteByPrimaryKeys">
    delete from employee
    where id in(
    <foreach collection="ids" item="id" separator=",">
      #{id}
    </foreach>)
  </delete>
  <select id="getTotal" resultType="java.lang.Long">
    select count(*) from employee e
    <where>
      <if test="emp!=null">
        <if test="emp.name !=null and emp.name!=''">
          and e.name like concat('%',#{emp.name},'%')
        </if>
        <if test="emp.politicId !=null">
          and e.politicId =#{emp.politicId}
        </if>
        <if test="emp.nationId !=null">
          and e.nationId =#{emp.nationId}
        </if>
        <if test="emp.jobLevelId !=null">
          and e.jobLevelId =#{emp.jobLevelId}
        </if>
        <if test="emp.departmentId !=null">
          and e.departmentId =#{emp.departmentId}
        </if>
        <if test="emp.engageForm !=null and emp.engageForm!=''">
          and e.engageForm =#{emp.engageForm}
        </if>
        <if test="emp.posId !=null">
          and e.posId =#{emp.posId}
        </if>
      </if>
      <if test="beginDateScope !=null">
        and e.beginDate between #{beginDateScope[0]} and #{beginDateScope [1]}
      </if>
    </where>
  </select>
  <select id="getMaxWorkerId" resultType="java.lang.Integer">
    select max( workID) from employee
  </select>

</mapper>